Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"6c337f2a-749c-4426-823a-092c5d0c6da0\" name=\"Changes\" comment=\"add(DAO):add excel support7\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/ThinkKing.iml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/ThinkKing.iml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_17_02_2024__11_26__Changes_.xml\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/convertor.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/convertor.py\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/main.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/main.py\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Python Script\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPEN&quot;\n  }\n}</component>\n  <component name=\"GithubPullRequestsUISettings\">\n    <option name=\"selectedUrlAndAccountId\">\n      <UrlAndAccount>\n        <option name=\"accountId\" value=\"982a4b28-6308-442f-a2b7-d2d78b18c85c\" />\n        <option name=\"url\" value=\"https://github.com/hothaifa96/ThinkKing.git\" />\n      </UrlAndAccount>\n    </option>\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2a6A5f6K8BT6rWnBUu0yus6VY5c\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"last_opened_file_path\": \"/Users/hothaifa/Documents/projects/ThinkKing\"\n  }\n}]]></component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/hist\" />\n    </key>\n  </component>\n  <component name=\"RunManager\" selected=\"Python.convertor\">\n    <configuration name=\"convertor\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"ThinkKing\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/convertor.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"convertor_math\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"ThinkKing\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/convertor_math.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <list>\n      <item itemvalue=\"Python.convertor\" />\n      <item itemvalue=\"Python.convertor_math\" />\n    </list>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Python.convertor\" />\n        <item itemvalue=\"Python.convertor_math\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"6c337f2a-749c-4426-823a-092c5d0c6da0\" name=\"Changes\" comment=\"\" />\n      <created>1703628474253</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1703628474253</updated>\n    </task>\n    <servers />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -5,12 +5,12 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="6c337f2a-749c-4426-823a-092c5d0c6da0" name="Changes" comment="add(DAO):add excel support7">
-      <change beforePath="$PROJECT_DIR$/.idea/ThinkKing.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/ThinkKing.iml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_17_02_2024__11_26__Changes_.xml" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/code.sql" beforeDir="false" afterPath="$PROJECT_DIR$/code.sql" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/convertor.py" beforeDir="false" afterPath="$PROJECT_DIR$/convertor.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/main.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/jenkinsfile" beforeDir="false" afterPath="$PROJECT_DIR$/jenkinsfile" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/sub-subjects-generator.py" beforeDir="false" afterPath="$PROJECT_DIR$/sub-subjects-generator.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/sub-subjects.sql" beforeDir="false" afterPath="$PROJECT_DIR$/sub-subjects.sql" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -48,13 +48,13 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "last_opened_file_path": "/Users/hothaifa/Documents/projects/ThinkKing"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;last_opened_file_path&quot;: &quot;/Users/hothaifa/Documents/projects/ThinkKing&quot;
   }
-}]]></component>
+}</component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
       <recent name="$PROJECT_DIR$" />
Index: jenkinsfile
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>pipeline {\n    agent any\n\n    environment {\n        AWS_DEFAULT_REGION = 'your_aws_region'\n        BUCKET_NAME = 'your_s3_bucket'\n        FILE_NAME = 'your_file.xlsx'\n        DATABASE_URL = 'your_database_url'\n        DATABASE_USER = 'your_database_user'\n        DATABASE_PASSWORD = 'your_database_password'\n    }\n\n    stages {\n        stage('Install Dependencies') {\n            steps {\n                script {\n                    sh 'pip install -r requirements.txt'\n                }\n            }\n        }\n\n        stage('Fetch XLSX from S3') {\n            steps {\n                script {\n                    sh 'aws s3 cp s3://${BUCKET_NAME}/${FILE_NAME} .'\n                }\n            }\n        }\n\n        stage('Run Converter Script') {\n            steps {\n                script {\n                    sh 'python converter.py'\n                }\n            }\n        }\n\n        stage('Install psql and Login to Server') {\n            steps {\n                script {\n                    // Install psql\n                    sh 'apt-get update && apt-get install -y postgresql-client'\n\n                    // Log in to the database server\n                    sh \"psql -h ${DATABASE_URL} -U ${DATABASE_USER} -d ${DATABASE_NAME} -c 'your_sql_command;'\"\n                }\n            }\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/jenkinsfile b/jenkinsfile
--- a/jenkinsfile	
+++ b/jenkinsfile	
@@ -1,50 +1,56 @@
 pipeline {
-    agent any
-
     environment {
-        AWS_DEFAULT_REGION = 'your_aws_region'
-        BUCKET_NAME = 'your_s3_bucket'
-        FILE_NAME = 'your_file.xlsx'
-        DATABASE_URL = 'your_database_url'
-        DATABASE_USER = 'your_database_user'
-        DATABASE_PASSWORD = 'your_database_password'
-    }
+        SERVER_IMAGE = 'red_proj_server:v1'
+        AWS_DEFAULT_REGION= 'eu-central-1'
+        AWS_ACCOUNT_ID ='339713109533'
+        ECR_REPO_NAME='thinking-api'
+        DOCKER_IMAGE_TAG = "${ECR_REPO_NAME}:${env.BUILD_NUMBER}"
 
+    }
+    agent any
     stages {
-        stage('Install Dependencies') {
+        stage('isntall dep') {
             steps {
-                script {
-                    sh 'pip install -r requirements.txt'
+                // Build steps for the server
+                script{
+                    sh 'git clone '
+                    echo 'isntall dep ...'
+                    sh "pip3 install -r requirements.txt"
                 }
             }
         }
-
         stage('Fetch XLSX from S3') {
             steps {
                 script {
-                    sh 'aws s3 cp s3://${BUCKET_NAME}/${FILE_NAME} .'
-                }
-            }
-        }
-
-        stage('Run Converter Script') {
-            steps {
-                script {
-                    sh 'python converter.py'
-                }
-            }
-        }
-
-        stage('Install psql and Login to Server') {
-            steps {
-                script {
-                    // Install psql
-                    sh 'apt-get update && apt-get install -y postgresql-client'
-
-                    // Log in to the database server
-                    sh "psql -h ${DATABASE_URL} -U ${DATABASE_USER} -d ${DATABASE_NAME} -c 'your_sql_command;'"
+                    withCredentials([[
+                            $class: 'AmazonWebServicesCredentialsBinding',
+                            credentialsId: 'ecr-credentials',
+                            accessKeyVariable: 'AWS_ACCESS_KEY_ID',
+                            secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
+                        ]]) {
+                            sh "echo AWS_ACCESS_KEY_ID ${AWS_ACCESS_KEY_ID} AWS_SECRET_ACCESS_KEY ${AWS_SECRET_ACCESS_KEY}"
+                            sh "aws s3 sync s3://thinking-bucket . --exclude 'img/*' --exclude '*zip'"                            sh "docker images"
+                         }
+                    
                 }
             }
         }
+        
+        //  stage('update the cluster') {
+        //     steps {
+        //         script {
+        //                 echo 'Pushing Docker Image to ECR...'
+        //                  withCredentials([[
+        //                     $class: 'AmazonWebServicesCredentialsBinding',
+        //                     credentialsId: 'ecr-credentials',
+        //                     accessKeyVariable: 'AWS_ACCESS_KEY_ID',
+        //                     secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
+        //                 ]]) {
+        //                     sh "aws ecs update-service --cluster Thnking-api --service api-service-1 --force-new-deployment --region eu-central-1"
+        //                  }
+        //         }
+        //     }
+        // }
+       
     }
-}
+}
\ No newline at end of file
